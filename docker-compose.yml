# Ironhack note - This file is for running in docker compose with prebuilt images
# Use these if you're stuck, or if you want to start slowly migrating from external images into your own.

services:
  vote:
    image: vote-app:latest
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8080:80"
    networks:
      - back-tier

  result:
    image: result-app:latest
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
    ports:
      - "8081:80"
    networks:
      - back-tier

  worker:
    image: worker-app:latest
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
    networks:
      - back-tier

  redis:
    image: redis:alpine
    volumes:
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/redis.sh
      interval: "5s"
    networks:
      - back-tier

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - "devops-project-1_db-data:/var/lib/postgresql/data"
      # - "./healthchecks:/healthchecks"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    networks:
      - back-tier

volumes:
  devops-project-1_db-data:

networks:
  back-tier:
